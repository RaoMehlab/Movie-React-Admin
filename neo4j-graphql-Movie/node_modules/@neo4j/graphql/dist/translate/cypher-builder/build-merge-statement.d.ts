import { Context, RelationField } from "../../types";
import { Node } from "../../classes";
import { CypherStatement } from "../types";
declare type TargetNode = {
    varName: string;
    node?: Node;
    parameters?: Record<string, any>;
    onCreate?: Record<string, any>;
};
declare type TargetRelation = {
    varName?: string;
    relationField: RelationField;
    onCreate?: Record<string, any>;
};
declare type MergeNodeArguments = {
    leftNode: TargetNode & {
        node: Node;
    };
    context: Context;
};
declare type MergeRelationArguments = {
    leftNode: TargetNode;
    rightNode: TargetNode;
    relation: TargetRelation;
    context: Context;
};
export declare function buildMergeStatement(args: MergeNodeArguments): CypherStatement;
export declare function buildMergeStatement(args: MergeRelationArguments): CypherStatement;
export {};
//# sourceMappingURL=build-merge-statement.d.ts.map